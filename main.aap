########################################################################
# Short Title: aap rules for Biosphere Genetic Algorithm
#
# Comments:
#
# $Id$
########################################################################

########################################################################

Sources = \
        BGAlib.cpp BGAutils.cpp ParseArgs.cpp \
        Liga_t.cpp Division_t.cpp RunPar_t.cpp \
        TrialDistributor.cpp RegisterSVNId.cpp \
        AtomCost.cpp

Tests = \
        TestRelaxExternalAtom.cpp
        
Scripts = dvar.py coord.py uniqdst.py
prefix ?= `os.environ['HOME']`
PREFIX = $prefix
BDIR = AAPDIR/$BDIR
CLEANFILES += core.[0-9]*

@from os import uname
@from socket import gethostname
@if gethostname() in ('white','green') and uname()[-1] == 'ia64':
    :toolsearch intelcc gcc
@else:
    :usetool gcc

:syseval gsl-config --cflags | :assign INCLUDE
:syseval gsl-config --libs | :assign LIBS
@if C_COMPILE_ACTION == "compile_gcc":
    CXXFLAGS += -Wall
    EXTRA_DEBUG = -gstabs+
    EXTRA_OPTIM = -ffast-math
@elif C_COMPILE_ACTION == "compile_intelcc":
    CXXFLAGS += -Wall
    EXTRA_DEBUG =
    EXTRA_OPTIM = -fast

all: gizaliga

:variant Build
    debug
        OPTIMIZE = 0
        DEBUG = yes
        CXXFLAGS += $EXTRA_DEBUG

    fast
        DEFINE += -DNDEBUG
        OPTIMIZE = 3
        CXXFLAGS += $EXTRA_OPTIM
        EXESUF = -fast

:program gizaliga \
        {comment = soccer league of pyramid builders} : \
        gizaliga.cpp $Sources

:program mcfitdist \
        {comment = MC shuffling of atoms} : \
        mcfitdist.cpp $Sources

:program relaxatoms \
        {comment = cluster relaxation program} : \
        relaxatoms.cpp $Sources

:program alltests
    {comment = build unit tests}
    {add_LIBS = -lcppunit -ldl} :
        alltests.cpp
        $Sources
        $Tests

test { comment = test gizaliga on shapes and solids } : \
    gizaliga-test-solids gizaliga-test-shapes gizaliga-test-bangle_range
        :print  -----------------
        :print  All tests passed!
        :print  -----------------

gizaliga-test-solids :
    @for f in ("tetrahedron.dst", "octahedron.dst", "cube.dst", \
            "icosahedron.dst", "dodecahedron.dst"):
        :sys {log} ./gizaliga$EXESUF maxcputime=1 solids/$f

gizaliga-test-shapes :
    @for f in ("square.dst", "pentagon.dst", \
            "hexagon.dst", "heptagon.dst", "octagon.dst"):
        :sys {log} ./gizaliga$EXESUF maxcputime=1 ndim=2 shapes/$f

gizaliga-test-bangle_range :
    :sys {log} ./gizaliga$EXESUF maxcputime=1 shapes/square.dst bangle_range=1.5,80
    @pass
    :sys {log} ./gizaliga$EXESUF maxcputime=1 shapes/hexagon.dst bangle_range=1.5,110

unittest { comment = execute Liga unit tests} : alltests
    :sys ./alltests${EXESUF}

install-py { comment = install python scripts } :
    @install_files('bin', _no.Scripts, '0755')

# End of file

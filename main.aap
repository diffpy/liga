########################################################################
# Short Title: aap rules for Biosphere Genetic Algorithm
#
# Comments:
#
# $Id$
########################################################################

########################################################################
CXXFLAGS += -Wall -Wno-sign-compare
INCLUDE = -I/u24/local/include
LD = $CXX
LDFLAGS = -L/u24/local/lib -lgsl -lgslcblas

Sources = BGAlib.cpp BGAutils.cpp ParseArgs.cpp
Scripts = dvar.py coord.py
prefix ?= `os.environ['HOME']`
PREFIX = $prefix
BDIR = AAPDIR/$BDIR

all: gizaliga

:variant Build
    debug
        OPTIMIZE = 0
        DEBUG = yes
        CXXFLAGS += -gstabs+

    fast
        OPTIMIZE = 3
        CXXFLAGS += -ffast-math
        EXESUF = -fast

:program gizaliga \
        {comment = soccer league of pyramid builders} : \
        gizaliga.cpp $Sources

:program djoser \
        {comment = clunky pyramid builder} : \
        djoser.cpp $Sources

:program mcfitdist \
        {comment = MC shuffling of atoms} : \
        mcfitdist.cpp $Sources

test { comment = test gizaliga on shapes and solids } : \
    gizaliga-test-solids gizaliga-test-shapes
        :print  -----------------
        :print  All tests passed!
        :print  -----------------

GL=./gizaliga
@if Build == "fast":
    GL=./gizaliga-fast

gizaliga-test-solids :
    @for f in ("tetrahedron.dst", "octahedron.dst", "cube.dst", \
            "icosahedron.dst", "dodecahedron.dst"):
        :sys {log} $GL maxcputime=1 solids/$f

gizaliga-test-shapes :
    @for f in ("square.dst", "hexagon.dst", "heptagon.dst", "octagon.dst"):
        :sys {log} $GL maxcputime=1 pyr_trials=0 shapes/$f

install-py { comment = install python scripts } :
    @install_files('bin', _no.Scripts, '0755')
